test_3d_vecs.tbc - purpose: test float and pointer/array arithmetics.
	accurate result:
		result => -1065353216 | err? 'None' <-- -9.f as an int32.
		op stack : 0            - '0xc022000000000000' <-- -9.f as an uint64.

test_factorial.tbc - purpose: test stack and recursive call frames.
	accurate result:
		result => 120 | err? 'None' <-- factorial of 5

test_fib34.tbc - purpose: test recursive calling speed
	accurate result:
		result => 5702887 | err? 'None' <-- fibonacci of 34
		
test_fib40.tbc - purpose: test recursive calling speed
	accurate result:
		result => 102334155 | err? 'None' <-- fibonacci of 40

test_global.tbc - purpose: calling a native and testing a host app-side variable being modified by the script.
	accurate result:
		op stack : 0            - '0x43960000' <-- 300.f
		op stack : 1            - '0x64' <-- 100
		op stack : 2            - '0x20' <-- 32

test_funcptr.tbc - purpose: advanced test combo of calling natives, passing host exported global pointers to natives, and loading string literals from script memory.
	accurate result:
		Please enter a long string:  <--
		*long pause because you're supposed to type stuff and hit enter.*
		...
		op stack : 0            - '0x100' <-- size of buffer array.
		op stack : 1            - '0x7f777fdaba00' <-- ptr value of 'stdin'. (random number because ptr)

test_dynamicloading - purpose: tests manually loading a script module and calling factorial from script bytecode!
	accurate result:
		same result as test_factorial.tbc test module.

test_dynamiclinking - purpose: tests dynamically linking a script module and calling factorial from script bytecode!
	accurate result:
		same result as test_factorial.tbc test module.

test_native_number.tbc - purpose: profile calling a C function 1 billion times with a number and adding it.

test_selfcall.tbc - purpose: test having the invoking API call a function within itself.
	accurate result:
		send flowers
		send nudes <-- the correct output should print "send nudes".
		send flowers
		send keks

test_loop.tbc - purpose: test a simple loop iterating 100M times.
	accurate result:
		result => 100000000 | err? 'None'
		op stack : 0            - '0'
		op stack : 1            - '0x1'
		op stack : 2            - '0x5f5e100'

test_simd.tbc - purpose: test vector/SIMD opcodes.
	accurate result:
		result => 1082130432 | err? 'None'
		op stack : 0            - '0x55cdee83185c'
		op stack : 1            - '0xc0400000c0000000' <-- float32 packed into 8 bytes.
		op stack : 2            - '0xc0800000' <-- remaining float32 value within packed vec of 12 bytes (float32 * 3)
		
test_str_cmp.tbc - purpose: test vector (of a string) comparisons.
	accurate result:
			result => 1 | err? 'None' <-- `result` must be `1`.

test_int_cmp.tbc - purpose: test vector (of an int) comparisons.
	accurate result:
			result => 1 | err? 'None' <-- `result` must be `1`.
